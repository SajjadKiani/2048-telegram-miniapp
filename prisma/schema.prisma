generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id                        Int              @id @default(autoincrement())
  name                      String
  telegramId                String           @unique
  telegramUsername          String           @unique
  referralId                String           @unique
  referredById              Int?
  referredBy                User?            @relation("UserReferrals", fields: [referredById], references: [id])
  referrals                 User[]           @relation("UserReferrals")
  createdAt                 DateTime         @default(now())
  score                     Int              @default(0)
  dailyScores               DailyScore[]     @relation("UserDailyScores")
  adViews                   AdView[]         @relation("UserAdViews")
}

model DailyScore {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation("UserDailyScores", fields: [userId], references: [id])
  date       DateTime @default(now())
  score      Int
  createdAt  DateTime @default(now())

  @@unique([userId, date])
}

model AdView {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation("UserAdViews", fields: [userId], references: [id])
  date       DateTime @default(now())
  status     AdStatus
  createdAt  DateTime @default(now())
}

enum AdStatus {
  SUCCESS
  FAIL
}